;**********************************************
; binarycounter.src
;**********************************************
 device 16f84
;Symbole definieren
status      equ     3 
zero        equ     2 
rp0         equ     5   ;bitadresse 
trisa       equ     5   ;fileadresse 
trisb       equ     6 
porta       equ     5
portb       equ     6
pcl         equ     2 
intcon      equ     0bh 
inte        equ     4 
intf        equ     1
gie         equ     7 
option      equ     1 
intedg      equ     6 
counter     equ     13h 
    org 0
;erster Befehl an Adresse 0, alle weiteren hinten dran
;Einsprung beim Einschalten (Power on)
cold
    goto    main
    nop
    nop
    nop
isr ;Interrupt springt immer an Adresse 4
    btfss   intcon,intf     ;War es ein RB0-Signal
    goto    intend          ;Nein, Fehler
    bcf     intcon,intf     ;Interrupt RB0 wird bearbeitet
    incf    counter         ;Zoehler wird erhoeht intend
    retfie                  ;Return from Interrupt enable
 
    bsf     status,rp0      ;auf Bank 1 umschalten
    movlw   0
    movwf   trisb           ;PortB wird komplett als Ausgang geschaltet
    bcf     trisa,3         ;RA3 wird Ausgang (Carry)
    bcf     status,rp0      ;zurueck auf Bank 0
main
;Interrupts initialisieren
    bsf     intcon,inte     ;RB0-Interrupt freischalten
    bcf     intcon,intf     ;Interruptflag loeschen
    bsf     status,rp0      ;auf Bank 1 schalten
    bcf     option,intedg   ;auf Fallende Flanke pruefen
    bcf     status,rp0      ;zurueck auf Bank 0 schalten
    bsf     intcon,gie      ;Globales Interrupt enable Bit
;Hauptschleife
loop
    clrf    counter         ;Reset und Startwert
    clrf    portb
loop1
;reset aktiv?
    btfss   porta,1         ;Reseteingang (0=Reset)
    goto    loop
;inhibit aktiv?
    btfsc   porta,2         ;Inhibit-Eingang
    goto    loop1
    xorwf   counter,w
    btfss   status,zero
    goto    ausgabe
    clrf    counter
    bsf     porta,3
;ausgabe auf 7-Segmentanzeige 
ausgabe
    movf    counter,w       ;zuerst rechte Stelle anzeigen
    call    convert         ;in 7-Segmentanzeige umsetzen
    movwf   portb
    bcf     porta,4         ;Digit einschalten
    bsf     porta,4         ;Digit wieder ausschalten
    swapf   counter,w       ;jetzt linke Stelle anzeigen
    call    convert
    movwf   portb
    bcf     porta,5
    bsf     porta,5
    goto    loop1
 
;setzt Binaerzahl in Bitmuster fuer 7-Segmentanzeige um.
convert
    andlw   15
    addwf   pcl             ;w= offset der zum PCL addiert wird.
    retlw   01111110b       ;0
    retlw   00001100b       ;1
    retlw   10110110b       ;2
    retlw   10011110b       ;3
    retlw   11001100b       ;4
    retlw   11011010b       ;5
    retlw   11111010b       ;6
    retlw   00001110b       ;7
    retlw   11111110b       ;8
    retlw   11011110b       ;9
    retlw   0               ;ungueltig
    retlw   0
    retlw   0
    retlw   0
    retlw   0
    retlw   0
 
 end